{"componentChunkName":"component---src-templates-mdx-template-js","path":"/tutorials/react/setup/","result":{"data":{"mdx":{"fields":{"slug":"/tutorials/react/setup/"},"frontmatter":{"date":"4 days ago","theme":"react","title":"Set Up"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Set Up\",\n  \"date\": \"2019-12-06T00:00:00.000Z\",\n  \"theme\": \"react\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Button = makeShortcode(\"Button\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Set Up\"), mdx(\"p\", null, \"On this page we will be go through the process of setting up the coding environment.\"), mdx(\"p\", null, \"We recommend using VS Code as your code editor. \", mdx(\"a\", {\n    style: {\n      textDecorationLine: 'underline'\n    },\n    href: \"https://code.visualstudio.com/download\"\n  }, \"Click Here\"), \"\\nto download VS Code.\"), mdx(\"br\", null), mdx(\"h2\", null, \"Download NodeJS\"), mdx(\"p\", null, \"Node.js is an open-source, cross-platform,\\nJavaScript runtime environment that executes JavaScript code outside of a browser.\\nNode.js lets developers use JavaScript to write command line tools and for\\nrunning scripts on the server-side to produce\\ndynamic web page content before the page is sent to the user's web browser.\"), mdx(\"a\", {\n    style: {\n      textDecorationLine: 'underline'\n    },\n    href: \"https://nodejs.org/en/download/\"\n  }, \"Click Here \"), \"to download NodeJS \", mdx(\"br\", null), mdx(\"br\", null), mdx(\"br\", null), mdx(\"h2\", null, \"Command Line Setup\"), mdx(\"p\", null, \"To make a new project execute the following statements in your command line.\\nIf you use VS Code you will get a terminal inside the text editor itself.\", mdx(\"br\", null), mdx(\"br\", null)), mdx(\"h3\", null, \"Part 1 : Verify Installation\"), mdx(\"p\", null, \"First check if NodeJS was successfully installed. To do so use the following commands.\"), mdx(\"p\", null, \"\\xA0\", \" 'node --version'\"), mdx(\"p\", null, \"\\xA0\", \" 'npm --version'\"), mdx(\"p\", null, \"They should output the versions for Node.js and NPM.\", mdx(\"br\", null), mdx(\"br\", null)), mdx(\"h3\", null, \"Part 2 : Install Create-React-App\"), mdx(\"p\", null, \"Now you can install your first node package with npm on the command line.\\nYou will install it globally with a -g flag.\\nBecause of installing it globally, you will always have access to it on the command line.\"), mdx(\"p\", null, \"Type the following command to install create-react-app:\"), mdx(\"p\", null, \"\\xA0\", \" 'npm install -g create-react-app'\"), mdx(\"br\", null), mdx(\"h3\", null, \"Part 3 : Make A New Project\"), mdx(\"p\", null, \"To make a new project type the following command:\"), mdx(\"p\", null, \"\\xA0\", \" 'npm create-react-app project_name'\"), mdx(\"p\", null, \"This will creat a new directory for the project. To navigate to this directory\\nand start the project type\"), mdx(\"p\", null, \"\\xA0\", \" 'cd project_name'\"), mdx(\"p\", null, \"\\xA0\", \" 'npm start'\"), mdx(\"p\", null, \"The command line should give you an output where you can find the application in the browser.\\nThe default should be localhost:8000. \"), mdx(\"a\", {\n    href: \"./introduction\",\n    style: {\n      \"float\": \"right\",\n      width: \"33.33%\",\n      textAlign: \"center\"\n    }\n  }, mdx(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    mdxType: \"Button\"\n  }, \"Next\")), mdx(\"a\", {\n    href: \"./\",\n    style: {\n      \"float\": \"right\",\n      width: \"33.33%\",\n      textAlign: \"center\"\n    }\n  }, mdx(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    mdxType: \"Button\"\n  }, \"Home\")), mdx(\"a\", {\n    href: \"#\",\n    style: {\n      \"float\": \"left\",\n      width: \"33.33%\",\n      textAlign: \"center\",\n      color: \"#000000\"\n    }\n  }, mdx(Button, {\n    variant: \"outlined\",\n    color: \"black\",\n    mdxType: \"Button\"\n  }, \"Previous\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/tutorials/react/setup/"}}}