{"componentChunkName":"component---src-templates-mdx-template-js","path":"/tutorials/react/jsx/","result":{"data":{"mdx":{"fields":{"slug":"/tutorials/react/jsx/"},"frontmatter":{"date":"4 months ago","theme":"default","title":"JSX","next":"/tutorials/react/components","prev":"/tutorials/react/introduction"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"JSX\",\n  \"date\": \"2019-12-06T00:00:00.000Z\",\n  \"theme\": \"default\",\n  \"next\": \"/tutorials/react/components\",\n  \"prev\": \"/tutorials/react/introduction\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h3\", null, \"Take a look at this code snippet:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"const snippet = <h1>Example<h1>\\n\")), mdx(\"p\", null, \"This is JSX, a syntax extension to JavaScript. It helps us define the UI for React Components.\"), mdx(\"p\", null, \"Using this syntax, lets create some React code!!!\"), mdx(\"p\", null, \"Try to edit this code:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"live=true\",\n    \"live\": \"true\"\n  }), \"function Example() {\\n  const sampleHeader = <h1>Edit Me</h1>;\\n  return <div>{sampleHeader}</div>;\\n}\\n\")), mdx(\"h3\", null, \"What is going on here?\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"function Example() {...}\\n\")), mdx(\"p\", null, \"This is a React functional component. For now we can think of this as a way to create a UI block.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"const sampleHeader = <h1>Edit Me</h1>;\\nreturn <div>{sampleHeader}</div>;\\n\")), mdx(\"p\", null, \"In this snippet, we are storing the heading \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Edit Me\"), \" in a variable called \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"sampleHeader\"), \".\\nThe return statement takes \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"sampleHeader\"), \" and places it in the div block.\"), mdx(\"p\", null, \"This is equivalent to:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"live=true\",\n    \"live\": \"true\"\n  }), \"function Example() {\\n  return (\\n    <div>\\n      <h1>Edit Me</h1>\\n    </div>\\n  );\\n}\\n\")), mdx(\"h2\", null, \"Assessments\"), mdx(\"h3\", null, \"You will have to answer a bunch of questions\"), mdx(Truefalse, {\n    qs: \"Can JSX tags contain children?\",\n    op1: \"Yes\",\n    op2: \"No\",\n    desc: \"Solution: Yes\",\n    mdxType: \"Truefalse\"\n  }), mdx(Threechoicemcq, {\n    qs: \"How do you add javascript expressions inside JSX?\",\n    op1: \"Using Curly braces\",\n    op2: \"Function call to javascript function\",\n    op3: \"Using Script Tag\",\n    desc: \"Solution: Using Curly Braces\",\n    mdxType: \"Threechoicemcq\"\n  }), mdx(Threechoicemcq, {\n    qs: \"JSX is faster than javascript functions. Why?\",\n    op1: \"UI elements are type-safe\",\n    op2: \"HTML is rendered faster\",\n    op3: \"Optimization during compile time\",\n    desc: \"Solution: Optimization during compile time\",\n    mdxType: \"Threechoicemcq\"\n  }), mdx(Truefalse, {\n    qs: \"JSX converts HTML tags into react elements\",\n    op1: \"True\",\n    op2: \"False\",\n    desc: \"Solution: True\",\n    mdxType: \"Truefalse\"\n  }), mdx(Threechoicemcq, {\n    qs: \"What is the correct way of embedding html inside JSX?\",\n    op1: \"Create a const Element of html code and render the element using ReactDom\",\n    op2: \"Html code is embedded directly inside the ReactDom.render()\",\n    op3: \"A separate function call is needed to create HTML elements and attributes\",\n    desc: \"Solution: Create a const Element of html code and render the element using ReactDom\",\n    mdxType: \"Threechoicemcq\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/tutorials/react/jsx/"}}}