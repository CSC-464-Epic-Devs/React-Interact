{"componentChunkName":"component---src-templates-mdx-template-js","path":"/tutorials/react/props/","result":{"data":{"mdx":{"fields":{"slug":"/tutorials/react/props/"},"frontmatter":{"date":"4 days ago","theme":"react","title":"React Home"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"React Home\",\n  \"date\": \"2019-12-06T00:00:00.000Z\",\n  \"theme\": \"react\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Button = makeShortcode(\"Button\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Props\"), mdx(\"p\", null, \"Props stand for \\\"Properties.\\\" They are read-only elements.\\nIt is an object which stores the value of attributes of a tag\\nand work similar to the HTML attributes. It gives a way to pass data\\nfrom one component to other components. It is similar to function arguments.\\nProps are passed to the component in the same way as arguments passed in a function.\"), mdx(\"p\", null, \"Props are immutable so we cannot modify the props from inside the component.\\nInside the components, we can add attributes called props.\\nThese attributes are available in the component\\nas this.props and can be used to render dynamic data in our render method.\"), mdx(\"p\", null, \"When you need  immutable data in the component, you have to add props to reactDom.render()\\nmethod in the main.js file of your ReactJS project and used it inside the component\\nin which you need. It can be explained in the below example.\"), mdx(\"h3\", null, \"Example\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"const myelement = <Car brand=\\\"Ford\\\" />;\\n\")), mdx(\"p\", null, \"The component receives the argument as a props object:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"class Car extends React.Component {\\n  render() {\\n    return <h2>I am a {this.props.brand}!</h1>;\\n  }\\n}\\n\")), mdx(\"h1\", null, \"Pass Data\"), mdx(\"p\", null, \"Props are also how you pass data from one component to another, as parameters.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-React\",\n    \"metastring\": \"live=true\",\n    \"live\": \"true\"\n  }), \"class Roommate extends React.Component {\\n constructor(props) {\\n    super(props);\\n    this.state = { Roommate : \\\"Dustin Cook\\\" };\\n }\\n\\n\\n  render() {\\n    return (\\n      <>\\n        <h1>Who lives in my house apart from me?</h1>\\n        <h2>{this.state.Roommate}!</h2>\\n      </>\\n    );\\n\\n  }\\n};\\n\")), mdx(\"br\", null), mdx(\"br\", null), mdx(\"a\", {\n    href: \"https://csc-464-regular-devs.github.io/React-Interact/tutorials/react/state\",\n    style: {\n      \"float\": \"right\",\n      width: \"33.33%\",\n      textAlign: \"center\"\n    }\n  }, mdx(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    mdxType: \"Button\"\n  }, \"Next\")), mdx(\"a\", {\n    href: \"https://csc-464-regular-devs.github.io/React-Interact/tutorials/\",\n    style: {\n      \"float\": \"right\",\n      width: \"33.33%\",\n      textAlign: \"center\"\n    }\n  }, mdx(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    mdxType: \"Button\"\n  }, \"Home\")), mdx(\"a\", {\n    href: \"https://csc-464-regular-devs.github.io/React-Interact/tutorials/react/components\",\n    style: {\n      \"float\": \"left\",\n      width: \"33.33%\",\n      textAlign: \"center\"\n    }\n  }, mdx(Button, {\n    variant: \"outlined\",\n    color: \"black\",\n    mdxType: \"Button\"\n  }, \"Previous\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/tutorials/react/props/"}}}