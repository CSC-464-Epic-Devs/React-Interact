{"componentChunkName":"component---src-templates-mdx-template-js","path":"/tutorials/react/components/","result":{"data":{"mdx":{"fields":{"slug":"/tutorials/react/components/"},"frontmatter":{"date":"4 days ago","theme":"React","title":"Components"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Components\",\n  \"date\": \"2019-12-06T00:00:00.000Z\",\n  \"theme\": \"React\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Button = makeShortcode(\"Button\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Components\"), mdx(\"p\", null, \"Components are independent and reusable bits of code.\\nThey serve the same purpose as JavaScript functions,\\nbut work in isolation and returns HTML via a render function.\"), mdx(\"p\", null, \"Conceptually, components are like JavaScript functions.\\nThey accept arbitrary inputs (called \\u201Cprops\\u201D) and\\nreturn React elements describing what should appear on the screen.\"), mdx(\"h4\", null, \"In ReactJS, we have mainly two types of components. They are :\"), mdx(\"h1\", null, \"Functional Components\"), mdx(\"p\", null, \"In React, function components are a way to write components\\nthat only contain a render method and don't have their own state.\\nThey are simply JavaScript functions that may or may not receive data as parameters.\\nWe can create a function that takes props(properties) as input and returns\\nwhat should be rendered.\\nA valid functional component can be shown in the below example.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"    function WelcomeMessage(props) {  \\n      return <h1>Welcome to the , {props.name}</h1>;  \\n    }  \\n\")), mdx(\"h1\", null, \"Class Components\"), mdx(\"p\", null, \"Class components are more complex than functional components.\\nIt requires you to extend from React's Component class and create a render\\nfunction which returns a React element. You can pass data from one class\\nto other class components. You can create a class by defining a class that\\nextends Component and has a render function.\\nHere is an example of a basic class component\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"    class MyComponent extends React.Component {  \\n      render() {  \\n        return (  \\n          <div>This is main component.</div>  \\n        );  \\n      }  \\n    }  \\n\")), mdx(\"h1\", null, \"Rendering a Component\"), mdx(\"p\", null, \"Elements can also represent user-defined components:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"const element = <Welcome name=\\\"Sara\\\" />;\\n\")), mdx(\"p\", null, \"When React sees an element representing a user-defined component,\\nit passes JSX attributes to this component as a single object. We call this object \\u201Cprops\\u201D.\"), mdx(\"p\", null, \"For example, this code renders \\u201CHello, Sara\\u201D on the page:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"function Welcome(props) {\\n  return <h1>Hello, {props.name}</h1>;\\n}\\n\\nconst element = <Welcome name=\\\"Sara\\\" />;\\nReactDOM.render(\\n  element,\\n  document.getElementById('root')\\n);\\n\")), mdx(\"h1\", null, \"Reusing Components\"), mdx(\"p\", null, \"Components can use other available components.\"), mdx(\"p\", null, \"For example, we can create an App component that renders Welcome many times:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"\\nfunction Welcome(props) {\\n  return <h1>Hello, {props.name}</h1>;\\n}\\n\\nfunction App() {\\n  return (\\n    <div>\\n      <Welcome name=\\\"Sara\\\" />\\n      <Welcome name=\\\"Cahal\\\" />\\n      <Welcome name=\\\"Edite\\\" />\\n    </div>\\n  );\\n}\\n);\\n\")), mdx(\"p\", null, \"In this example, we reuse the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Welcome\"), \" functional component and provide it a\\nstring value for the prop \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"name\"), \". Each \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Welcome\"), \" component uses takes their\\nrespective prop and outputs them as defined.\"), mdx(\"h1\", null, \"Component Constructor\"), mdx(\"p\", null, \"If there is a constructor() function in your component,\\nthis function will be called when the component gets initiated.\"), mdx(\"p\", null, \"The constructor function is where you initiate the component's properties.\"), mdx(\"p\", null, \"In React, component properties should be kept in an object called state.\"), mdx(\"p\", null, \"You will learn more about state later in this tutorial.\"), mdx(\"p\", null, \"The constructor function is also where you honor the inheritance of the parent\\ncomponent by including the super() statement,\\nwhich executes the parent component's constructor function,\\nand your component has access to all the functions\\nof the parent component (React.Component).\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-React\",\n    \"metastring\": \"live = true\",\n    \"live\": true,\n    \"\": \"\",\n    \"true\": true\n  }), \"class Shirt extends React.Component {\\n  constructor() {\\n    super();\\n    this.state = { color: \\\"blue\\\" };\\n  }\\n  render() {\\n    return <h2>Thank you for buying {this.state.color}  Shirt!</h2>;\\n  }\\n  \\n}\\n\")), mdx(\"br\", null), mdx(\"br\", null), mdx(\"a\", {\n    href: \"./props\",\n    style: {\n      \"float\": \"right\",\n      width: \"33.33%\",\n      textAlign: \"center\"\n    }\n  }, mdx(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    mdxType: \"Button\"\n  }, \"Next\")), mdx(\"a\", {\n    href: \"./\",\n    style: {\n      \"float\": \"right\",\n      width: \"33.33%\",\n      textAlign: \"center\"\n    }\n  }, mdx(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    mdxType: \"Button\"\n  }, \"Home\")), mdx(\"a\", {\n    href: \"./jsx\",\n    style: {\n      \"float\": \"left\",\n      width: \"33.33%\",\n      textAlign: \"center\"\n    }\n  }, mdx(Button, {\n    variant: \"outlined\",\n    color: \"black\",\n    mdxType: \"Button\"\n  }, \"Previous\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/tutorials/react/components/"}}}