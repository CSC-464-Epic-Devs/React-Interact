{"componentChunkName":"component---src-templates-mdx-template-js","path":"/tutorials/react/components/","result":{"data":{"mdx":{"fields":{"slug":"/tutorials/react/components/"},"frontmatter":{"date":"a month ago","theme":"React","title":"Components","next":"/tutorials/react/props","prev":"/tutorials/react/jsx"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Components\",\n  \"date\": \"2020-03-19T00:00:00.000Z\",\n  \"theme\": \"React\",\n  \"next\": \"/tutorials/react/props\",\n  \"prev\": \"/tutorials/react/jsx\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"React Components\"), mdx(\"p\", null, \"Components in react are reusable bits of code. You can think of a component as a function that returns a piece of the UI.\\nThey can be used to break apart a problem, and as a thing that you can write once and use again later.\"), mdx(\"p\", null, \"We are going to start with two types of components: \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"class\"), \" and \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"functional\"), \".\"), mdx(\"h2\", null, \"Funciton Components\"), mdx(\"p\", null, \"In the following example, we define a function called BigText, is has no parameters, and all it does is return some jsx.\\nThis is a valid component.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"live=true\",\n    \"live\": \"true\"\n  }), \"function BigText() {\\n  return <h1>BIG TEXT</h1>;\\n}\\n\")), mdx(\"h2\", null, \"Class Component\"), mdx(\"p\", null, \"React components can be done as classes like such,\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"live=true\",\n    \"live\": \"true\"\n  }), \"class BasicComponent extends React.Component {\\n  render() {\\n    return <h2>Component results in h2</h2>;\\n  }\\n}\\n\")), mdx(\"p\", null, \"Notice how when we are extending \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"React.Component\"), \", we need to define a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"render\"), \" function; however, when we are just doing it functionally,\\nwe can just return the jsx. We will get more into the advantages and disadvantages in the following tutorials.\"), mdx(\"h2\", null, \"Component Composition\"), mdx(\"p\", null, \"One of the primary purposes of components is in their composition.\"), mdx(\"iframe\", {\n    width: \"560\",\n    height: \"315\",\n    src: \"https://www.youtube.com/embed/tZZv5Z2Iz_s\",\n    frameBorder: \"0\",\n    allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n    allowFullScreen: true\n  }), mdx(\"p\", null, \"While every component is independent, they can be combined to make something greater.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"live=true noInline=true\",\n    \"live\": \"true\",\n    \"noInline\": \"true\"\n  }), \"const Header = () => {\\n  return <h2>Header</h2>;\\n};\\n\\nconst Body = () => {\\n  return (\\n    <p>\\n      Lorem ipsum dolor sit amet, falli blandit qualisque ei eam. Ne erant\\n      salutatus forensibus vis.\\n    </p>\\n  );\\n};\\n\\nconst Footer = () => {\\n  return <h3>Footer</h3>;\\n};\\n\\nconst App = () => {\\n  return (\\n    <div>\\n      <Header />\\n      <Body />\\n      <Footer />\\n    </div>\\n  );\\n};\\n\\nrender(<App />);\\n\")), mdx(\"p\", null, \"Notice how components here are getting broken down into jsx as primitives. A component must return\\na single element (that is why we wrap the return in a div primitive), but you can feed the div any mix\\nof components that you would like.\"), mdx(\"h2\", null, \"Higher Order Components\"), mdx(\"p\", null, \"In javascript you can create higher order function like below,\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"function multiply(x, y) {\\n  return x * y;\\n}\\n\\nfunction mulByFive(x, multiplyRef) {\\n  return multiply(x, 5);\\n}\\n\\nmulByFive(5);\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Output\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-react\"\n  }), \"25\\n\")), mdx(\"p\", null, \"Higher order components apply the same idea but to react components.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"live=true noInline=true\",\n    \"live\": \"true\",\n    \"noInline\": \"true\"\n  }), \"function BigText() {\\n  return <h1>BIG TEXT</h1>;\\n}\\n\\nfunction MakeItItalicToo(OtherComponent) {\\n  return class extends React.Component {\\n    render() {\\n      return (\\n        <i>\\n          <OtherComponent />\\n        </i>\\n      );\\n    }\\n  };\\n}\\n\\nconst MakeBigTextItalic = MakeItItalicToo(BigText);\\n\\nrender(<MakeBigTextItalic />);\\n\")), mdx(\"h2\", null, \"Assessments\"), mdx(\"h3\", null, \"You will have to answer a bunch of questions\"), mdx(Truefalse, {\n    qs: \"In simple terms Components are like Javascript Functions.\",\n    op1: \"True\",\n    op2: \"False\",\n    desc: \"Solution: True\",\n    mdxType: \"Truefalse\"\n  }), mdx(MCQ, {\n    qs: \"Which is a false statement about Components?(There\\u2019s only one false statement)\",\n    op1: \"Components can be re-used\",\n    op2: \"Components are independent from each other\",\n    op3: \"Class Component may or may not have a render function\",\n    op4: \"The name is required to start with uppercase alphabet\",\n    desc: \"Solution: False : Class Component may or may not have a render function\",\n    mdxType: \"MCQ\"\n  }), mdx(Threechoicemcq, {\n    qs: \"Where do you initialize the properties of a component?\",\n    op1: \"Inside a render function\",\n    op2: \"Using any html tag\",\n    op3: \"Inside a constructor\",\n    desc: \"Solution: Inside a constructor\",\n    mdxType: \"Threechoicemcq\"\n  }), mdx(MCQ, {\n    qs: \"Which statement is false about Functional Components?\",\n    op1: \"Advised to be used more often due to it\\u2019s predictability\",\n    op2: \"They are stateless\",\n    op3: \"They output UI elements\",\n    op4: \"None\",\n    desc: \"Solution: None\",\n    mdxType: \"MCQ\"\n  }), mdx(MCQ, {\n    qs: \"Which statement is false about Class Components?\",\n    op1: \"There are no events associated\",\n    op2: \"They manage state \",\n    op3: \"They may contain other components( nested components)\",\n    op4: \"They may contain lifecycle methods\",\n    desc: \"Solution: False : There are no events associated\",\n    mdxType: \"MCQ\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/tutorials/react/components/"}}}