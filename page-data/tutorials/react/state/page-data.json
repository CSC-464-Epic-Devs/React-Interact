{"componentChunkName":"component---src-templates-mdx-template-js","path":"/tutorials/react/state/","result":{"data":{"mdx":{"fields":{"slug":"/tutorials/react/state/"},"frontmatter":{"date":"14 days ago","theme":"react","title":"React State"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"React State\",\n  \"date\": \"2019-12-07T00:00:00.000Z\",\n  \"theme\": \"react\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"React State\"), mdx(\"p\", null, \"React follows the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.geeksforgeeks.org/mvc-design-pattern/\"\n  }), \"MVC\"), \" - (Model View Controller) design pattern.\"), mdx(\"p\", null, \"Consider the following code snippet:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"class Toggle extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      on: false\\n    };\\n  }\\n\\n  render() {\\n    return <button>{this.state.on}</button>;\\n  }\\n}\\n\")), mdx(\"p\", null, \"We have a React component called Toggle and it has a member variable called state which is a javascript object with one attribute: on, set to false by default.\"), mdx(\"p\", null, \"Notice we can access our components state inside the render function. However, it is not very useful to have a static state, so how do we change that?\"), mdx(\"p\", null, \"We can make a member function that will handle this click, but first we must bind it to this in the constructor.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"live=true\",\n    \"live\": \"true\"\n  }), \"class Toggle extends React.Component {\\n    constructor(props) {\\n        super(props);\\n        this.state = {\\n            on: false\\n        };\\n        this.handleClick = this.handleClick.bind(this);\\n    }\\n\\n    handleClick() {\\n        this.setState({on: !this.state.on})\\n    }\\n\\n    render() {\\n        return <button onClick={this.handleClick}>{this.state.on.toString()}</button>\\n    }\\n}\\n\")), mdx(\"p\", null, \"Alright, so our button will call our handleClick function, and then what happens is it sets on to the opposite value of on toggling it.\"), mdx(\"br\", null), mdx(\"br\", null), mdx(PrevNextNav, {\n    next: \"/projects/react/counterapp\",\n    home: \"/tutorials/react/\",\n    prev: \"/tutorials/react/props\",\n    mdxType: \"PrevNextNav\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/tutorials/react/state/"}}}