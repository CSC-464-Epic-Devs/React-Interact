{"componentChunkName":"component---src-templates-mdx-template-js","path":"/tutorials/react/state/","result":{"data":{"mdx":{"fields":{"slug":"/tutorials/react/state/"},"frontmatter":{"date":"4 months ago","theme":"react","title":"React State","next":"/projects/react/counterapp","prev":"/tutorials/react/props"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"React State\",\n  \"date\": \"2019-12-07T00:00:00.000Z\",\n  \"theme\": \"react\",\n  \"next\": \"/projects/react/counterapp\",\n  \"prev\": \"/tutorials/react/props\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"React follows the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.geeksforgeeks.org/mvc-design-pattern/\"\n  }), \"MVC\"), \" - (Model View Controller) design pattern.\"), mdx(\"p\", null, \"Consider the following code snippet:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"class Toggle extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      on: false,\\n    };\\n  }\\n\\n  render() {\\n    return <button>{this.state.on}</button>;\\n  }\\n}\\n\")), mdx(\"p\", null, \"We have a React component called \\\"Toggle\\\" and it has a member variable called \\\"state\\\" which is a JavaScript object with one attribute: on, set to false by default.\"), mdx(\"p\", null, \"Notice we can access our components state inside the render function. However, it is not very useful to have a static state, so how do we change that?\"), mdx(\"p\", null, \"We can make a member function that will handle this click, but first we must bind it to this in the constructor.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"live=true\",\n    \"live\": \"true\"\n  }), \"class Toggle extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      on: false,\\n    };\\n    this.handleClick = this.handleClick.bind(this);\\n  }\\n\\n  handleClick() {\\n    this.setState({ on: !this.state.on });\\n  }\\n\\n  render() {\\n    return (\\n      <button onClick={this.handleClick}>{this.state.on.toString()}</button>\\n    );\\n  }\\n}\\n\")), mdx(\"p\", null, \"Alright, so our button will call our handle Click function, and then what happens is it sets on to the opposite value of on toggling it.\"), mdx(\"h2\", null, \"Assessments\"), mdx(\"h3\", null, \"You will have to answer a bunch of questions\"), mdx(MCQ, {\n    qs: \"Suppose you were trying to change the component state from a function. How would you do it ?\",\n    op1: \"return State\",\n    op2: \"state.somefunc()\",\n    op3: \"this.state()\",\n    op4: \"this.state = \",\n    desc: \"Solution: this.state\",\n    mdxType: \"MCQ\"\n  }), mdx(MCQ, {\n    qs: \"What is the purpose of setState() ?\",\n    op1: \"Initializes state\",\n    op2: \"Updates State\",\n    op3: \"Removes State\",\n    op4: \"Highlights State\",\n    desc: \"Solution: Updates State\",\n    mdxType: \"MCQ\"\n  }), mdx(Truefalse, {\n    qs: \"Does the component render again on changing state ?\",\n    op1: \"Yes\",\n    op2: \"No\",\n    desc: \"Solution: Yes\",\n    mdxType: \"Truefalse\"\n  }), mdx(Threechoicemcq, {\n    qs: \"Max limit of the no of properties of a state can have?\",\n    op1: \"100\",\n    op2: \"200\",\n    op3: \"No Limit\",\n    desc: \"Solution: No Limit\",\n    mdxType: \"Threechoicemcq\"\n  }), mdx(MCQ, {\n    qs: \"Why state doesn\\u2019t update immediately upon changing and instead re-renders all over again?\",\n    op1: \"New features can\\u2019t be implemented this way ?\",\n    op2: \"Props and State can be messed up making it harder to debug the error\",\n    op3: \"State will time out\",\n    op4: \"State will wait unnecessarily for other components to render synchronously. \",\n    desc: \"Solution: Both A) and B) are correct\",\n    mdxType: \"MCQ\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/tutorials/react/state/"}}}