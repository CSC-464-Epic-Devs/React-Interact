{"componentChunkName":"component---src-templates-mdx-template-js","path":"/tutorials/react/introduction/","result":{"data":{"mdx":{"fields":{"slug":"/tutorials/react/introduction/"},"frontmatter":{"date":"15 days ago","theme":"React","title":"Introduction"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Introduction\",\n  \"date\": \"2019-12-06T00:00:00.000Z\",\n  \"theme\": \"React\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Button = makeShortcode(\"Button\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Introduction to React\"), mdx(\"h2\", null, \"What is React ?\"), mdx(\"p\", null, \"React (also known as React.js or ReactJS) is a JavaScript library\\nfor building user interfaces. It is maintained by Facebook and a community\\nof individual developers and companies.\"), mdx(\"p\", null, \"React can be used as a base in the development of single-page or mobile applications,\\nas it is optimal for fetching rapidly changing data that needs to be recorded.\\nHowever, fetching data is only the beginning of what happens on a web page,\\nwhich is why complex React applications usually require the use of additional libraries\\nfor state management, routing, and interaction with an API Redux, React Router and axios\\nare examples of such libraries. \"), mdx(\"h2\", null, \"History of React\"), mdx(\"p\", null, \"React was created by Jordan Walke, a software engineer at Facebook,\\nwho released an early prototype of React called \\\"FaxJS\\\". He was influenced by XHP,\\nan HTML component library for PHP. It was first deployed on Facebook's News Feed in 2011\\nand later on Instagram in 2012. It was open-sourced at JSConf US in May 2013.\"), mdx(\"p\", null, \"React Native, which enables native Android, iOS, and UWP development with React,\\nwas announced at Facebook's React Conf in February 2015 and open-sourced in March 2015.\"), mdx(\"p\", null, \"On April 18, 2017, Facebook announced React Fiber,\\na new core algorithm of React library for building user interfaces.\\nReact Fiber was to become the foundation of any future improvements and\\nfeature development of the React library.\"), mdx(\"p\", null, \"On September 26, 2017, React 16.0 was released to the public.\"), mdx(\"p\", null, \"On February 16, 2019, React 16.8 was released to the public.\\nThe release introduced React Hooks.\"), mdx(\"h2\", null, \"Why Should you Learn React\"), mdx(\"p\", null, \"The main question arises in front of us is why one should use ReactJS.\\nThere are so many open-source platforms for making the front-end web application\\ndevelopment easier, like Angular. Let us take a quick look on the benefits of React\\nover other competitive technologies or frameworks. With the front-end world changing\\non a daily basis, it\\u2019s hard to devote time to learning a new framework \\u2013 especially\\nwhen that framework could ultimately become a dead end.\"), mdx(\"h3\", null, \"Simplicity\"), mdx(\"p\", null, \"ReactJS is just simpler to grasp right away. The component-based approach,\\nwell-defined lifecycle, and use of just plain JavaScript make React very simple to learn,\\nbuild a professional web (and mobile applications), and support it.\"), mdx(\"h3\", null, \"Easy to Learn\"), mdx(\"p\", null, \"Anyone with a basic previous knowledge in programming can easily understand React\\nwhile Angular\\nand Ember are referred to as \\u2018Domain specific Language\\u2019,\\nimplying that it is difficult to learn them.\\nFor react you just need basic knowledge of CSS and HTML.\"), mdx(\"h3\", null, \"Native Approach\"), mdx(\"p\", null, \"React can be used to create mobile applications (React Native).\\nAnd React is a diehard fan of reusability, meaning extensive code reusability is supported.\\nSo at the same time we can make IOS, Android and Web application.\"), mdx(\"h3\", null, \"Data Binding\"), mdx(\"p\", null, \"React uses one-way data binding and an application architecture called Flux controls\\nthe flow of data to components through one control point \\u2013 the dispatcher.\\nIt's easier to debug self-contained components of large ReactJS apps.\"), mdx(\"h3\", null, \"Performance\"), mdx(\"p\", null, \"React does not offer any concept of a built-in container for dependency.\\nYou can use Browserify, Require JS, EcmaScript 6 modules which we can use via Babel,\\nReactJS-di to inject dependencies automatically.\"), mdx(\"h3\", null, \"Testability\"), mdx(\"p\", null, \"ReactJS applications are super easy to test. React views can be treated as\\nfunctions of the state, so we can manipulate with state we pass to the ReactJS view\\nand take a look at the output and triggered actions, events, functions, etc.\"), mdx(\"a\", {\n    href: \"https://csc-464-regular-devs.github.io/React-Interact/tutorials/react/jsx\",\n    style: {\n      \"float\": \"right\",\n      width: \"33.33%\",\n      textAlign: \"center\"\n    }\n  }, mdx(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    mdxType: \"Button\"\n  }, \"Next\")), mdx(\"a\", {\n    href: \"https://csc-464-regular-devs.github.io/React-Interact/tutorials/react/\",\n    style: {\n      \"float\": \"right\",\n      width: \"33.33%\",\n      textAlign: \"center\"\n    }\n  }, mdx(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    mdxType: \"Button\"\n  }, \"Home\")), mdx(\"a\", {\n    href: \"https://csc-464-regular-devs.github.io/React-Interact/tutorials/react/\",\n    style: {\n      \"float\": \"left\",\n      width: \"33.33%\",\n      textAlign: \"center\"\n    }\n  }, mdx(Button, {\n    variant: \"outlined\",\n    color: \"black\",\n    mdxType: \"Button\"\n  }, \"Previous\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/tutorials/react/introduction/"}}}