{"componentChunkName":"component---src-templates-mdx-template-js","path":"/scope_test/","result":{"data":{"mdx":{"fields":{"slug":"/scope_test/"},"frontmatter":{"date":"4 months ago","theme":"default","title":"JSX","next":null,"prev":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"JSX\",\n  \"date\": \"2019-12-06T00:00:00.000Z\",\n  \"theme\": \"default\",\n  \"next\": null,\n  \"prev\": null\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"React-Live noInLine test\"), mdx(\"h3\", null, \"Take a look at this code snippet:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-react\",\n    \"metastring\": \"live=true noInline=true\",\n    \"live\": \"true\",\n    \"noInline\": \"true\"\n  }), \"const Wrapper = ({ children }) => (\\n  <div style={{\\n    background: 'papayawhip',\\n    width: '100%',\\n    padding: '2rem'\\n  }}>\\n    {children}\\n  </div>\\n)\\n\\nconst Title = () => (\\n  <h3 style={{ color: 'palevioletred' }}>\\n    Hello World!\\n  </h3>\\n)\\n\\nrender(\\n  <Wrapper>\\n    <Title />\\n  </Wrapper>\\n)\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/scope_test/"}}}